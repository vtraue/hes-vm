#pragma once
#include <stdint.h>
typedef enum Bytecode_Op : uint8_t {
  Bytecode_Op_unreachable = 0x00,
  Bytecode_Op_nop = 0x01,
  Bytecode_Op_block = 0x02,
  Bytecode_Op_loop = 0x03,
  Bytecode_Op_if = 0x04,
  Bytecode_Op_else = 0x05,
  Bytecode_Op_end = 0x0B,
  Bytecode_Op_br = 0x0C,
  Bytecode_Op_br_if = 0x0D,
  Bytecode_Op_br_table = 0x0E,
  Bytecode_Op_return = 0x0F,
  Bytecode_Op_call = 0x10,
  Bytecode_Op_call_indirect = 0x11,
  Bytecode_Op_drop = 0x1A,
  Bytecode_Op_select = 0x1B,
  Bytecode_Op_select_t = 0x1C,
  Bytecode_Op_local_get = 0x20,
  Bytecode_Op_local_set = 0x21,
  Bytecode_Op_local_tee = 0x22,
  Bytecode_Op_global_get = 0x23,
  Bytecode_Op_global_set = 0x24,
  Bytecode_Op_i32_load = 0x28,
  Bytecode_Op_i64_load = 0x29,
  Bytecode_Op_f32_load = 0x2A,
  Bytecode_Op_f64_load = 0x2B,
  Bytecode_Op_i32_load8_s = 0x2C,
  Bytecode_Op_i32_store = 0x36,
  Bytecode_Op_i64_store = 0x37,
  Bytecode_Op_f32_store = 0x38,
  Bytecode_Op_i32_const = 0x41,
  Bytecode_Op_i64_const = 0x42,
  Bytecode_Op_i32_eqz = 0x45,
  Bytecode_Op_i32_eq = 0x46,
  Bytecode_Op_i32_ne = 0x47,
  Bytecode_Op_i32_lt_s = 0x48,
  Bytecode_Op_i32_lt_u = 0x49,
  Bytecode_Op_i32_gt_s = 0x4A,
  Bytecode_Op_i32_gt_u = 0x4B,
  Bytecode_Op_i32_le_s = 0x4C,
  Bytecode_Op_i32_le_u = 0x4D,
  Bytecode_Op_i32_ge_s = 0x4E,
  Bytecode_Op_i32_ge_u = 0x4F,
  Bytecode_Op_ref_null = 0xD0,
  Bytecode_Op_ref_is_null = 0xD1,
  Bytecode_Op_ref_func = 0xF2
} Bytecode_Op;
